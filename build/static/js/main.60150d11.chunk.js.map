{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Person.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","delete","updatedObject","put","PersonForm","contact","handleSubmit","onChange","name","number","onSubmit","type","value","Person","person","onDelete","onClick","Filter","filter","setFilter","e","target","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","msg","App","useState","setMessage","persons","setPersons","setContact","useEffect","personService","initialPersons","display","toLowerCase","includes","preventDefault","map","indexOf","returnedPerson","concat","setTimeout","window","confirm","personToUpdate","p","catch","error","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PACMA,EAAU,eAsBD,EApBA,WAEb,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAkBhB,EAfA,SAACC,GAEd,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAASA,EAAIC,SAahB,EAVA,SAACG,GAEd,OADYP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAACC,GAAD,OAASA,EAAIC,SAQhB,EALA,SAACG,EAAIE,GAElB,OADYT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAME,GAC/BP,MAAK,SAACC,GAAD,OAASA,EAAIC,SCGhBO,EArBI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACnCC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACd,OACE,6BACE,0BAAMC,SAAUJ,GACd,qCACQ,IACN,2BAAOK,KAAK,OAAOH,KAAK,OAAOI,MAAOJ,EAAMD,SAAUA,KAExD,uCACU,IACR,2BAAOI,KAAK,OAAOH,KAAK,SAASI,MAAOH,EAAQF,SAAUA,KAE5D,6BACE,4BAAQI,KAAK,UAAb,WCNKE,EARA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACxB,OACE,6BACGD,EAAON,KADV,IACiBM,EAAOL,OADxB,IACgC,4BAAQO,QAASD,GAAjB,YCUrBE,EAbA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACxB,OACE,iDAEE,2BACER,KAAK,OACLC,MAAOM,EACPX,SAAU,SAACa,GAAD,OAAOD,EAAUC,EAAEC,OAAOT,YCyB7BU,EAhCM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAqBtB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,MAAwB,YAAjBD,EAAQZ,KAzBN,CACdc,MAAO,QACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAGF,CACZN,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,SASXR,EAAQS,MCyFAC,MA/Gf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACNX,EADM,KACGY,EADH,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGeH,mBAAS,IAHxB,mBAGNhB,EAHM,KAGEC,EAHF,OAIiBe,mBAAS,CACrC1B,KAAM,GACNC,OAAQ,KANG,mBAINJ,EAJM,KAIGiC,EAJH,KASbC,qBAAU,WACRC,IAAuB7C,MAAK,SAAC8C,GAC3BJ,EAAWI,QAEZ,IAEH,IAqEMC,EAAUN,EAAQlB,QAAO,SAACJ,GAAD,OAC7BA,EAAON,KAAKmC,cAAcC,SAAS1B,EAAOyB,kBAG5C,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcpB,QAASA,IACvB,kBAAC,EAAD,CAAQL,OAAQA,EAAQC,UAAWA,IACnC,yCACA,kBAAC,EAAD,CACEd,QAASA,EACTC,aArEe,SAACc,GAOpB,GANAA,EAAEyB,kBAMmB,IAJDT,EACjBU,KAAI,SAAChC,GAAD,OAAYA,EAAON,QACvBuC,QAAQ1C,EAAQG,MAGjBgC,EAAqBnC,GAASV,MAAK,SAACqD,GAClCX,EAAWD,EAAQa,OAAOD,IAC1BV,EAAW,CACT9B,KAAM,GACNC,OAAQ,KAEV0B,EAAW,CAAEH,IAAI,SAAD,OAAWgB,EAAexC,MAAQG,KAAM,YACxDuC,YAAW,WACTf,EAAW,QACV,aAEA,GACLgB,OAAOC,QAAP,UACK/C,EAAQG,KADb,+EAGA,CACA,IAAM6C,EAAiBjB,EAAQlB,QAAO,SAACoC,GAAD,OAAOA,EAAE9C,OAASH,EAAQG,QAAM,GACtEgC,EACUa,EAAerD,GAAIK,GAC1BV,MAAK,SAACqD,GACLX,EACED,EAAQU,KAAI,SAACQ,GAAD,OACVA,EAAEtD,KAAOqD,EAAerD,GAAKsD,EAAIN,MAGrCV,EAAW,CACT9B,KAAM,GACNC,OAAQ,KAEV0B,EAAW,CACTH,IAAI,WAAD,OAAagB,EAAexC,MAC/BG,KAAM,YAERuC,YAAW,WACTf,EAAW,QACV,QAEJoB,OAAM,SAACC,GACNrB,EAAW,CACTH,IAAI,GAAD,OAAKqB,EAAe7C,KAApB,wBACHG,KAAM,UAERuC,YAAW,WACTf,EAAW,QACV,UAkBL5B,SAlFW,SAACa,GAChBkB,EAAW,eAAKjC,EAAN,eAAgBe,EAAEC,OAAOb,KAAOY,EAAEC,OAAOT,YAmFjD,uCACC8B,EAAQI,KAAI,SAAChC,GAAD,OACX,kBAAC,EAAD,CACE2C,IAAK3C,EAAOd,GACZc,OAAQA,EACRC,SAAU,kBArFD,SAACD,GACZqC,OAAOC,QAAP,iBAAyBtC,EAAON,KAAhC,OACFgC,EAAqB1B,EAAOd,IAAIL,MAAK,WACnC0C,EAAWD,EAAQlB,QAAO,SAACoC,GAAD,OAAOA,EAAEtD,KAAOc,EAAOd,UAkF/Be,CAASD,WC1GnC4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.60150d11.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const req = axios.post(baseUrl, newObject);\n  return req.then((res) => res.data);\n};\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`);\n  return req.then((res) => res.data);\n};\n\nconst update = (id, updatedObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, updatedObject);\n  return req.then((res) => res.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React from 'react';\n\nconst PersonForm = ({ contact, handleSubmit, onChange }) => {\n  const { name, number } = contact;\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name:{' '}\n          <input type='text' name='name' value={name} onChange={onChange} />\n        </div>\n        <div>\n          number:{' '}\n          <input type='text' name='number' value={number} onChange={onChange} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ person, onDelete }) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={onDelete}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react';\n\nconst Filter = ({ filter, setFilter }) => {\n  return (\n    <div>\n      Filter shown with\n      <input\n        type='text'\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  const success = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px',\n  };\n\n  const error = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px',\n  };\n\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div style={message.type === 'success' ? success : error}>\n      {message.msg}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport PersonForm from './components/PersonForm';\nimport Person from './components/Person';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\n\nfunction App() {\n  const [message, setMessage] = useState(null);\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const onChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  };\n\n  const onDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person.id).then(() => {\n        setPersons(persons.filter((p) => p.id !== person.id));\n      });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const testForName = persons\n      .map((person) => person.name)\n      .indexOf(contact.name);\n\n    if (testForName === -1) {\n      personService.create(contact).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setContact({\n          name: '',\n          number: '',\n        });\n        setMessage({ msg: `Added ${returnedPerson.name}`, type: 'success' });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    } else if (\n      window.confirm(\n        `${contact.name} is already added to the phonebook, replace the old number with a new one?`\n      )\n    ) {\n      const personToUpdate = persons.filter((p) => p.name === contact.name)[0];\n      personService\n        .update(personToUpdate.id, contact)\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((p) =>\n              p.id !== personToUpdate.id ? p : returnedPerson\n            )\n          );\n          setContact({\n            name: '',\n            number: '',\n          });\n          setMessage({\n            msg: `Updated ${returnedPerson.name}`,\n            type: 'success',\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setMessage({\n            msg: `${personToUpdate.name} was already deleted`,\n            type: 'error',\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const display = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm\n        contact={contact}\n        handleSubmit={handleSubmit}\n        onChange={onChange}\n      />\n      <h2>Numbers</h2>\n      {display.map((person) => (\n        <Person\n          key={person.id}\n          person={person}\n          onDelete={() => onDelete(person)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}